# --------------------------------------------
# Basic
# --------------------------------------------

set -g history-limit 10000

set -g default-terminal "screen-256color"

# status line's colors
set -g status-style fg=white,bold,bg=black

# window list colors
setw -g window-status-style fg=cyan,bg=black
setw -g window-status-current-style fg=white,bold,bg=red

# status line
set -g status-position top
set -g status-left "#[fg=cyan,bold] [#S] #I:#P" #[bg=black,nobold]î‚°"
set -g status-right "#{prefix_highlight} #[fg=cyan] %R "
set -g status-justify centre

# pane border
setw -g pane-border-style fg=colour240
setw -g pane-active-border-style fg=colour12#,bg=black

# active pane normal, other shaded out 
# setw -g window-style fg=colour240,bg=colour235
# setw -g window-active-style fg=white,bg=black

# Command / message line 
set -g message-style fg=white,bold,bg=black

# enable activity alerts 
setw -g monitor-activity on
set -g visual-activity on

# Use mouse
set -g mouse on
bind-key m set-option -g mouse on \; display 'Mouse: ON'
bind-key M set-option -g mouse off \; display 'Mouse: OFF'

# --------------------------------------------
# Copy mode
# --------------------------------------------

bind Escape copy-mode

# y and p as in vim
# bind-key -T copy-mode-vi 'y' send -X copy-selection
# bind p paste-buffer

# [ X clipboard integration ]
# Emacs style with xsel
# bind-key -T copy-mode y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# bind-key C-y run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
# Vim style with xsel
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
# Vim style with xclip
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
# bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
unbind p
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up

# --------------------------------------------
# Vim friendly
# --------------------------------------------

set -g mode-keys vi

#Prefix is Ctrl-a
# set -g prefix C-a
# bind C-a send-prefix
# unbind C-b

set -sg escape-time 1
set -g base-index 0
setw -g pane-base-index 0

# easy-to-remember split pane commands
# bind | split-window -h
# bind - split-window -v
# unbind '"'
# unbind %

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# --------------------------------------------
# Plugin Manager
# --------------------------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# prefix highlight
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
# set -g @prefix_highlight_output_prefix '< '
# set -g @prefix_highlight_output_suffix ' >'

# --------------------------------------------
# Others
# --------------------------------------------

bind-key R source-file ~/.tmux.conf \; \
        display-message "source-file done"

# shortcut for synchronize-panes toggle
bind C-s set-window-option synchronize-panes

# split pane and retain the current directory of existing pane
bind _ split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

